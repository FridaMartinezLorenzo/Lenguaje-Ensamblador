;MARTINEZ LORENZO FRIDA XIMENA 402-B

STACKSG SEGMENT PARA STACK 'STACK'
DB 100H DUP(0)
STACKSG ENDS

DATASG SEGMENT PARA 'DATA'
MSG1 DB "CADENA :$"
MSG2 DB "TOTAL ELIMINACIONES: $"
MSG3 DB 10, 13, " $"
CADENA DB 1000 DUP ('$'), "$"
CADENANUEVA DB 1000 DUP (20H), "$"
CONTAH DB ?
CONTAL DB ?
BANDERAV DB 0
DATASG ENDS

CODESG SEGMENT PARA 'CODE'
PRINCI PROC FAR
    ASSUME SS:STACKSG, DS:DATASG, CS:CODESG
    PUSH DS
    SUB AX,AX
    PUSH AX
    MOV AX,SEG DATASG
    MOV DS,AX
    MOV ES,AX ; Linea que se a?ade para el uso de MOVS

   ;INICIA PROGRAMA

    LEA DX, MSG1
    CALL MENSAJE
    LEA DX, MSG3
    CALL MENSAJE
    MOV CX,0    
    
    ;LEER UNA CADENA CARACTER A CARACTER
    LEA SI,CADENA
    NUEVALECTURA:
             CALL LEER_CAR_CON_ECO
             MOV [SI], AL
             INC SI
             INC CX
             CMP AL,0DH
             JE TERMINOLECTURA
             JMP NUEVALECTURA
    TERMINOLECTURA:
     
     MOV CX,0
     LEA SI,CADENA
     OTROCAR:
         INC CX
         INC SI
         MOV AL,[SI]
         CMP AL,'$'
         JNE OTROCAR
         
     MOV BX,CX ;RESPALDO
 
     CLD
     MOV SI, OFFSET CADENA
     LEA DI, CADENANUEVA[BX] ;almacenando caracteres, salto de l?nea y tabulador
   
     REGR: LODSB ; MOV AL,[SI], INC SI
     MOV [DI],AL
     DEC DI
     LOOP REGR
     
     MOV CADENANUEVA[BX+1],'$'

        MOV CX,0
        PUSH SI
        LEA SI,CADENANUEVA
        OTROPLIS:
            MOV AL,[SI]
            CMP AL,'$'
            JE NEXTSTEP
            INC SI
            INC CX
            JMP OTROPLIS
        POP SI
        NEXTSTEP:
    
        
     
        ;SUB CX,2
    MOV BX,CX ;RESPALDO NUEVA
    
    CLD
    MOV AL,24H
    LEA DI,CADENA
    REP STOSB
    ;MOV [DI+1],'$'
    CALL ELIMINAR
    
    LEA DX, MSG3
    CALL MENSAJE
    LEA DX,MSG2
    CALL MENSAJE
    
    MOV AH,CONTAH
    MOV DL,AH
    CALL DESEMPAQUETA
    MOV AL,CONTAL
    MOV DL,AL
    DEC DL
    CALL DESEMPAQUETA
    
    LEA DX, MSG3
    CALL MENSAJE
    LEA DX, MSG3
    CALL MENSAJE
    LEA DX,MSG1
    CALL MENSAJE
    LEA DX, MSG3
    CALL MENSAJE
    LEA DX,CADENA
    CALL MENSAJE
    
    
    CALL LEE
    MOV AH,4CH
    INT 21H
    
PRINCI ENDP


MENSAJE PROC
    PUSH AX
    MOV AH,09H
    INT 21H
    POP AX
    RET
MENSAJE ENDP

LEE PROC
    PUSH AX
    MOV AH,01
    INT 21H
    POP AX
    RET
LEE ENDP

FIN PROC
    MOV AH,4CH
    INT 21H
    RET
FIN ENDP

DESEMPAQUETA PROC
   PUSH DX
   PUSH CX
   MOV DH,DL ; GUARDANDO EL VALOR ORIGINAL DE DH
   MOV CL,4
   SHR DL,CL ; CUATRO CORRIMIENTOS A LA DERECHA
   CALL BINARIO_ASCII
   CALL ESCRIBE_CAR
   MOV DL,DH
   AND DL,0FH ;RECUPERANDO EL DATO DE DH
   CALL BINARIO_ASCII
   CALL ESCRIBE_CAR
   POP CX
   POP DX
   RET
DESEMPAQUETA ENDP

BINARIO_ASCII PROC
 CMP DL,9H  
 JG SUMA37 ;Porque es un numero
 ADD DL,30H
 JMP DESENLACE
SUMA37:
  ADD DL,37H ;el dato se va a quedar en DL
DESENLACE: 
  RET
BINARIO_ASCII ENDP

escribe_car PROC
 PUSH AX
 MOV AH,02  ; Caracter a desplegar almacenado en dl
 INT 21h
 POP AX
 RET 
escribe_car ENDP

leer_car_con_eco PROC
 MOV AH,01 ;no podemos resguardar ax en esa subrutina porque se pierde el char
 INT 21H
 RET
leer_car_con_eco ENDP

leercadena PROC
PUSH DX
PUSH AX
LEA DX,CADENA
MOV AH,0AH
INT 21H
POP AX
POP DX
RET
leercadena ENDP

ELIMINAR PROC
PUSH DX
PUSH AX
;ADD BX,2 ;REESTABLECEMOS
MOV CX,BX
CALL REEMPLAZAR_ESPACIOS
MOV CX,BX
CALL REEMPLAZAR_PUNTO
MOV CX,BX
CALL REEMPLAZAR_COMA
MOV CX,BX
CALL REEMPLAZAR_DOSPUNTOS
MOV CX,BX
CALL REEMPLAZAR_PUNTOYCOMA

PUSH AX
MOV AL,0
MOV CONTAH,AL
MOV CONTAL,AL
POP AX

MOV CX,BX

;CX YA TIENE EL TOTAL
LEA SI,CADENANUEVA
LEA DI,CADENA
SIGUIENTE:
    MOV AL,[SI]
    CMP AL,26H ;EL ESPACIO
    JE SALTAR
    CMP AL,20H
    JE SALTAR
    CMP AL,2CH
    JE SALTAR
    CMP AL,2EH
    JE SALTAR
    CMP AL,3AH
    JE SALTAR
    CMP AL,3BH
    JE SALTAR
    MOV [DI],AL
    INC DI
    INC SI
    MOV DL,CH
    LOOP SIGUIENTE
    JMP FINAL
    
    SALTAR:
      INC SI
      PUSH AX
      MOV AH,CONTAH
      MOV AL,CONTAL
      CLC
      ADD AL,1
      ADC AH,0
      MOV CONTAH,AH
      MOV CONTAL,AL
      POP AX      
      DEC CX
      CMP CX,0
      JE VACIA
      ;AGREGAR SUMA CON CARRY
      ;INC NUEVALONG
      JMP SIGUIENTE

      VACIA:
        LEA DI, CADENA
        MOV [DI],24H
FINAL:
;MOV [DI],'$'
POP AX
POP DX
RET
ELIMINAR ENDP

REEMPLAZAR_ESPACIOS PROC
PUSH AX
    CLD
    MOV AL,20H
    ;CX YA TRAE EL CONTEO
    LEA DI,CADENANUEVA
    C1:
    REPNE SCASB
    JNE EXIT1
    DEC DI ; DECREMENTAR LA DIRECCION PARA HACER EL REMPLAZO
    MOV BYTE PTR[DI],26H ;mover un byte a la localidad apuntada por DI
    CMP CX,0
    JNE C1
EXIT1:
POP AX
RET
REEMPLAZAR_ESPACIOS ENDP


REEMPLAZAR_COMA PROC
PUSH AX
    CLD
    MOV AL,2CH
    ;CX YA TRAE EL CONTEO
    LEA DI,CADENANUEVA
    C2:
    REPNE SCASB
    JNE EXIT2
    DEC DI ; DECREMENTAR LA DIRECCION PARA HACER EL REMPLAZO
    MOV BYTE PTR[DI],26H ;mover un byte a la localidad apuntada por DI
    CMP CX,0
    JNE C2
EXIT2:
POP AX
RET
REEMPLAZAR_COMA ENDP


REEMPLAZAR_PUNTO PROC
PUSH AX
    CLD
    MOV AL,2EH
    ;CX YA TRAE EL CONTEO
    LEA DI,CADENANUEVA
    C3:
    REPNE SCASB
    JNE EXIT3
    DEC DI ; DECREMENTAR LA DIRECCION PARA HACER EL REMPLAZO
    MOV BYTE PTR[DI],26H ;mover un byte a la localidad apuntada por DI
    CMP CX,0
    JNE C3
EXIT3:
POP AX
RET
REEMPLAZAR_PUNTO ENDP

REEMPLAZAR_DOSPUNTOS PROC
PUSH AX
    CLD
    MOV AL,3AH
    ;CX YA TRAE EL CONTEO
    LEA DI,CADENANUEVA
    C4:
    REPNE SCASB
    JNE EXIT4
    DEC DI ; DECREMENTAR LA DIRECCION PARA HACER EL REMPLAZO
    MOV BYTE PTR[DI],26H ;mover un byte a la localidad apuntada por DI
    CMP CX,0
    JNE C4
    EXIT4:
POP AX
RET
REEMPLAZAR_DOSPUNTOS ENDP

REEMPLAZAR_PUNTOYCOMA PROC
PUSH AX
    CLD
    MOV AL,3BH
    ;CX YA TRAE EL CONTEO
    LEA DI,CADENANUEVA
    C5:
    REPNE SCASB
    JNE EXIT5
    DEC DI ; DECREMENTAR LA DIRECCION PARA HACER EL REMPLAZO
    MOV BYTE PTR[DI],26H ;mover un byte a la localidad apuntada por DI
    CMP CX,0
    JNE C5
    EXIT5:
POP AX
RET
REEMPLAZAR_PUNTOYCOMA ENDP

CODESG ENDS
END PRINCI