;programa para Masm QUE OBTIENE UN NUMERO ALEATORIO
   ; ESTE PROGRAMA CALCULA UN NUMERO ALEATORIO BASADO
   ; EN OTRO NUMERO ALEATORIO PREVIO O SEMILLA, COLOCADO EN DX
   ;Y LA SALIDA SE OBTIENE EN AX, EL NUMERO ALEATORIO ES DE 16 BITS

; Definicion de stack
STACKSG segment para stack 'stack'
        DB 20 DUP (0)
STACKSG ENDS

;DEFINICION DE AREAS DE TRABAJO
DATASG SEGMENT PARA 'DATA'
MEN1 DB 'SEMILLA PARA EL NUMERO$'
MEN2 DB 'ADIOS$'
DATASG ENDS

CODESG SEGMENT PARA 'CODE'
PRINCI PROC FAR
   ASSUME SS:STACKSG, DS:DATASG,CS:CODESG
   ;PROTOCOLO
   PUSH DS
   SUB AX,AX
   PUSH AX
   MOV AX,SEG DATASG
   MOV DS,AX

   ;INICIA PROGRAMA
   MOV CX,10
OTRO:   PUSH CX
   CALL SEMILLA
   CALL ALEATORIO
   CALL ESCALANDO
   CALL LEE
   POP CX
   LOOP OTRO
   CALL SALIR_DOS
PRINCI ENDP



SEMILLA PROC
PUSH AX
MOV AH,2CH
INT 21H  ; RETORNA CH=HORAS, EN FORMATO 00-23, MEDIANOCHE=0
         ; CL MINUTOS 00-59
         ;DH SEGUNDOS 00-59
         ;DL CENTESIMAS DE SEGUNDO 00-99
POP AX
RET
SEMILLA ENDP

ALEATORIO PROC
; XN+1=(2053*XN + 13849)MOD 2**16
; RETORNA EL NUMERO PSEUDOALEATORIO EN AX
MOV AX,DX ;CARGANDO A AX EL NUMERO SEMILLA tomado de la int 21 serv             2CH
MOV DX,0  ;CARGANDO CERO EN LA POSICION MAS SIGNIFICATIVA DEL               MULTIPLICANDO
MOV BX,2053 ; MULTIPLICADOR
MUL BX
MOV BX,13849 ;CARGA EN BX LA CONSTANTE ADITIVA
CLC ;limpiar la bandera de CARRY
ADD AX,BX ; SUMA PARTES MENOS SIGNIFICATIVAS DEL RESULTADO
ADC DX,0 ; SUMA EL ACARREO SI ES NECESARIO
MOV BX,0FFFFH ; CARGAR LA CONSTANTE 2**16-1
DIV BX
MOV AX,DX ; MUEVE EL RESIDUO  AX
RET
ALEATORIO ENDP


ESCALANDO PROC
   ; ESCALANDO EL NUMERO PSEUDOALEATORIO OBTENIDO
   MOV DX,0
   MOV BX,0AH ;NUMEROS ALEATORIOS ENTRE 0 Y 9
   DIV BX
   MOV AX,DX
   ADD AX,3030H ; CONVIRTIENDO EL DATO BINARIO A ASCII
   MOV DL,AH
   MOV DH,AL
   CALL ESCRIBE
   MOV DL,DH
   CALL ESCRIBE
   RET
ESCALANDO ENDP

LEE PROC
   MOV AH,01
   INT 21H
RET
LEE ENDP

ESCRIBE PROC
   MOV AH,02
   INT 21H
 RET
ESCRIBE ENDP

SALIR_DOS PROC
   MOV AH,4CH
   INT 21H
RET
SALIR_DOS ENDP



CODESG ENDS
        END PRINCI
  
